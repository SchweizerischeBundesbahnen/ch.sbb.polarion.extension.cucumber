{
  "openapi": "3.0.1",
  "info": {
    "title": "Cucumber REST API",
    "version": "v1"
  },
  "paths": {
    "/api/2/field": {
      "get": {
        "operationId": "field",
        "parameters": [
          {
            "description": "ID of the project",
            "in": "header",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FieldDefinition"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successfully retrieved the list of declared fields"
          }
        },
        "summary": "Get declared fields list for project",
        "tags": [
          "Fields"
        ]
      }
    },
    "/api/context": {
      "get": {
        "operationId": "getContext",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Context"
                }
              }
            },
            "description": "Context information"
          }
        },
        "summary": "Returns basic context information of Polarion's extension",
        "tags": [
          "Extension Information"
        ]
      }
    },
    "/api/feature": {
      "post": {
        "operationId": "createOrUpdateFeature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Feature"
              }
            }
          },
          "description": "The feature object to be created or updated",
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "*/*": {}
            },
            "description": "default response"
          }
        },
        "summary": "Create/update feature",
        "tags": [
          "Features"
        ]
      }
    },
    "/api/feature/{projectId}/{workItemId}": {
      "get": {
        "description": "Retrieve a feature by projectId and workItemId",
        "operationId": "getFeature",
        "parameters": [
          {
            "description": "ID of the project",
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the work item",
            "in": "path",
            "name": "workItemId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                }
              }
            },
            "description": "Successfully retrieved the feature"
          }
        },
        "summary": "Get feature",
        "tags": [
          "Features"
        ]
      }
    },
    "/api/version": {
      "get": {
        "operationId": "getVersion",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            },
            "description": "Version information"
          }
        },
        "summary": "Returns version of Polarion's extension",
        "tags": [
          "Extension Information"
        ]
      }
    },
    "/raven/1.0/export/test": {
      "get": {
        "operationId": "exportTest",
        "parameters": [
          {
            "description": "String which contain list of work items information (e.g. 'elibrary/EL-103;drivepilot/DP-47')",
            "in": "query",
            "name": "keys",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query which will be passed to the trackerService#queryWorkItems method",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "True - the response will contain zip-archive with all workitems found, false - only first workitem with no archiving",
            "in": "query",
            "name": "fz",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of features"
          }
        },
        "summary": "Get features list",
        "tags": [
          "Export"
        ]
      }
    },
    "/raven/1.0/import/execution/cucumber/multipart": {
      "post": {
        "operationId": "importExecutionCucumberMultipart",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "info": {
                    "$ref": "#/components/schemas/FormDataBodyPart"
                  },
                  "result": {
                    "$ref": "#/components/schemas/FormDataBodyPart"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExecutionResponse"
                }
              }
            },
            "description": "Cucumber test result successfully imported"
          }
        },
        "summary": "Import cucumber test result (multipart)",
        "tags": [
          "Import"
        ]
      }
    },
    "/raven/1.0/import/execution/junit": {
      "post": {
        "operationId": "importExecutionJunit",
        "parameters": [
          {
            "in": "query",
            "name": "projectKey",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "testExecKey",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "testPlanKey",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "testEnvironments",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "revision",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixVersion",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "$ref": "#/components/schemas/FormDataBodyPart"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExecutionResponse"
                }
              }
            },
            "description": "JUnit test result successfully imported"
          }
        },
        "summary": "Import JUnit test result",
        "tags": [
          "Import"
        ]
      }
    },
    "/raven/1.0/import/execution/junit/multipart": {
      "post": {
        "operationId": "importExecutionJunitMultipart",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "info": {
                    "$ref": "#/components/schemas/FormDataBodyPart"
                  },
                  "file": {
                    "$ref": "#/components/schemas/FormDataBodyPart"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExecutionResponse"
                }
              }
            },
            "description": "JUnit test result successfully imported"
          }
        },
        "summary": "Import JUnit test result (multipart)",
        "tags": [
          "Import"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BodyPart": {
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "mediaType": {
            "properties": {
              "parameters": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "subtype": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "wildcardSubtype": {
                "type": "boolean"
              },
              "wildcardType": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              },
              "type": "array"
            },
            "type": "object"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ContentDisposition": {
        "properties": {
          "creationDate": {
            "format": "date-time",
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "modificationDate": {
            "format": "date-time",
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "readDate": {
            "format": "date-time",
            "type": "string"
          },
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Context": {
        "description": "Represents the context for building URLs related to Polarion services",
        "properties": {
          "baseUrl": {
            "description": "Returns the base URL constructed with the extension context",
            "type": "string"
          },
          "extensionContext": {
            "description": "The extension context used as a base for URL construction",
            "type": "string"
          },
          "restUrl": {
            "description": "Returns the REST API URL constructed with the extension context",
            "type": "string"
          },
          "swaggerUiUrl": {
            "description": "Returns the Swagger UI URL for the REST API",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Feature": {
        "description": "Represents a feature, including project and work item details, as well as feature content",
        "properties": {
          "content": {
            "description": "The content of the feature",
            "type": "string"
          },
          "filename": {
            "description": "The name of the file containing the feature",
            "type": "string"
          },
          "projectId": {
            "description": "The ID of the project associated with the feature",
            "type": "string"
          },
          "title": {
            "description": "The title of the feature",
            "type": "string"
          },
          "workItemId": {
            "description": "The ID of the work item linked to the feature",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FieldDefinition": {
        "properties": {
          "clauseNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "custom": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          }
        },
        "type": "object"
      },
      "FormDataBodyPart": {
        "properties": {
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "formDataContentDisposition": {
            "$ref": "#/components/schemas/FormDataContentDisposition"
          },
          "headers": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "mediaType": {
            "properties": {
              "parameters": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "subtype": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "wildcardSubtype": {
                "type": "boolean"
              },
              "wildcardType": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "name": {
            "type": "string"
          },
          "parameterizedHeaders": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              },
              "type": "array"
            },
            "type": "object"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          },
          "simple": {
            "type": "boolean"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FormDataContentDisposition": {
        "properties": {
          "creationDate": {
            "format": "date-time",
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "modificationDate": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "readDate": {
            "format": "date-time",
            "type": "string"
          },
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImportExecutionResponse": {
        "description": "Represents the response after importing a test execution, containing the test execution issue details",
        "properties": {
          "testExecIssue": {
            "$ref": "#/components/schemas/TestExecIssue"
          }
        },
        "type": "object"
      },
      "MessageBodyWorkers": {
        "type": "object"
      },
      "MultiPart": {
        "properties": {
          "bodyParts": {
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            },
            "type": "array"
          },
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          },
          "entity": {
            "type": "object"
          },
          "headers": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "mediaType": {
            "properties": {
              "parameters": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "subtype": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "wildcardSubtype": {
                "type": "boolean"
              },
              "wildcardType": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "messageBodyWorkers": {
            "$ref": "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/ParameterizedHeader"
              },
              "type": "array"
            },
            "type": "object"
          },
          "parent": {
            "$ref": "#/components/schemas/MultiPart"
          },
          "providers": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "ParameterizedHeader": {
        "properties": {
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Schema": {
        "properties": {
          "items": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestExecIssue": {
        "description": "Represents a test execution issue",
        "properties": {
          "id": {
            "description": "The unique identifier of the test execution issue",
            "type": "string"
          },
          "key": {
            "description": "The key of the test execution issue",
            "type": "string"
          },
          "self": {
            "description": "The self URL of the test execution issue",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Version": {
        "description": "Details about the software version",
        "properties": {
          "automaticModuleName": {
            "description": "The automatic module name",
            "type": "string"
          },
          "bundleBuildTimestamp": {
            "description": "The build timestamp of the bundle",
            "type": "string"
          },
          "bundleName": {
            "description": "The name of the bundle",
            "type": "string"
          },
          "bundleVendor": {
            "description": "The vendor of the bundle",
            "type": "string"
          },
          "bundleVersion": {
            "description": "The version of the bundle",
            "type": "string"
          },
          "projectURL": {
            "description": "The project URL",
            "type": "string"
          },
          "supportEmail": {
            "description": "Support email for the bundle",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}
